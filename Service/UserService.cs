using LearningManagement.Model;
using LearningManagement.Constant;
using LearningManagement.Model;
using LearningManagement.IService;
using LearningManagement.IRepo;
using LearningManagement.DBConfig;
using LearningManagement.Helper;



namespace LearningManagement.Service;


public class UserService : IUserService
{
    private readonly IUserRepo userRepo;
    private readonly SessionHelper sessionHelper;

    public UserService(IUserRepo userRepo, SessionHelper sessionHelper)
    {
        this.userRepo = userRepo;
        this.sessionHelper = sessionHelper;
    }

    public int GetRoleIdByRoleCode(string roleCode)
    {
        using (var context = new DBContextConfig())
        {
            return userRepo.GetRoleIdByRoleCode(roleCode, context);
        }
    }

    public int RegisterStudent(string fullName, string email, string password, int? photoProfileId)
    {

        using (var context = new DBContextConfig())
        {
            var newStudent = new User
            {
                Fullname = fullName,
                Email = email,
                Password = password,
                PhotoProfileId = photoProfileId,
                RoleId = GetRoleIdByRoleCode(Constant.Role.StudentRoleCode),
                CreatedBy = GetRoleIdByRoleCode(Constant.Role.SystemRoleCode),
                CreatedAt = DateTime.Now,
                IsActive = true
            };

            return userRepo.RegisterStudent(newStudent, context);
        }
    }

    public string GenerateRandomPassword(int length = 5)
    {
        const string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        Random random = new Random();

        char[] password = new char[length];

        for (int i = 0; i < length; i++)
        {
            password[i] = chars[random.Next(chars.Length)];
        }

        return new string(password);
    }

    public void RegisterLecturer(string fullName, string email, int createdBy)
    {
        string autogeneratedPassword = GenerateRandomPassword();

        userRepo.RegisterLecturer(fullName, email, autogeneratedPassword, createdBy);

    }

    public List<User> GetAllLecturers()
    {
        return userRepo.GetAllLecturers();
    }
}
